{"version":3,"sources":["services/token.service.js","services/api.js","services/auth.service.js","hooks/useNotification.js","components/Login/Login.js","components/Signup/Signup.js","services/book.service.js","components/Book/BookDetail.js","components/Home/Home.js","components/Book/EditBook.js","components/Book/ViewBook.js","components/Missing/NotFound.js","App.js","index.js"],"names":["TokenService","getLocalRefreshToken","user","JSON","parse","localStorage","getItem","refreshToken","getLocalAccessToken","accessToken","updateNewAccessToken","token","setItem","stringify","getUser","setUser","removeUser","removeItem","getUsername","username","instance","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","res","err","originalConfig","status","_retry","post","rs","console","log","data","authService","signup","firstname","lastname","email","password","api","then","login","logout","getCurrentUser","UseNotification","useState","show","setShow","title","setTitle","message","setMessage","Login","setUsername","setPassword","useBetween","errors","setErrors","validated","setValidated","navigate","useNavigate","handleLogin","e","preventDefault","newErrors","findFormErrors","Object","keys","length","AuthService","window","location","reload","errorMessage","responseType","style","padding","Form","noValidate","onSubmit","Group","as","Col","md","className","controlId","Label","Control","type","placeholder","value","onChange","target","isInvalid","Feedback","Button","variant","Signup","setFirstname","setLastname","setEmail","confirmPassword","setConfirmPassword","test","strongRegex","RegExp","localeCompare","handleSignup","setTimeout","Row","required","InputGroup","hasValidation","Text","id","BookService","getBookCount","get","getAllBooks","page","sizePerPage","createBook","description","price","readBook","updateBook","put","deleteBook","delete","BookDetail","props","book","view","currentBook","currentUser","currentView","showBookDetailModal","setShowBookDetailModal","handleCloseBookDetailModal","handleShowBookDetailModal","handleDelete","Card","width","marginTop","Body","Title","Subtitle","authorDto","Link","onClick","href","Modal","onHide","size","centered","Header","closeButton","Footer","SearchBar","Search","Home","books","setBooks","undefined","setCurrentUser","useEffect","columns","dataField","text","sort","formatter","cell","row","expandRow","renderer","showExpandColumn","expandHeaderColumnRenderer","isAnyExpands","expandColumnRenderer","expanded","bootstrap4","keyField","filter","filterFactory","search","searchProps","margin","srText","baseProps","noDataIndication","pagination","paginationFactory","PARAMS","EditBook","useSearchParams","searchParams","setId","setDescription","setPrice","currentParams","fromEntries","handleSubmit","event","rows","ViewBook","setCurrentBook","catch","NotFound","to","App","path","element","ToastContainer","position","Toast","onClose","delay","autohide","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33ed369d.chunk.js","sourcesContent":["const getLocalRefreshToken = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user?.refreshToken;\n};\n\nconst getLocalAccessToken = () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user?.accessToken;\n};\n\nconst updateNewAccessToken = (token) => {\n    let user = JSON.parse(localStorage.getItem(\"user\"));\n    user.accessToken = token;\n    localStorage.setItem(\"user\", JSON.stringify(user));\n};\n\nconst getUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst getUsername = () => {\n    let user =  JSON.parse(localStorage.getItem(\"user\"));\n    return user?.username;\n};\n\nconst setUser = (user) => {\n    //   console.log(JSON.stringify(user));\n    localStorage.setItem(\"user\", JSON.stringify(user));\n};\n\nconst removeUser = () => {\n    localStorage.removeItem(\"user\");\n};\n\nconst TokenService = {\n    getLocalRefreshToken,\n    getLocalAccessToken,\n    updateNewAccessToken,\n    getUser,\n    setUser,\n    removeUser,\n    getUsername\n};\n\nexport default TokenService;","import axios from \"axios\";\nimport TokenService from \"./token.service\";\n\nconst instance = axios.create({\n    baseURL: \"https://bookstore-folly.herokuapp.com\",\n    headers: {\n        \"Content-Type\": \"application/json\",\n    },\n});\n\ninstance.interceptors.request.use(\n    (config) => {\n        const token = TokenService.getLocalAccessToken();\n        const username = TokenService.getUsername();\n        if (token) {\n            config.headers[\"Authorization\"] = \"Bearer \" + token;\n            config.headers[\"Username\"] = username;\n        }\n        return config;\n    },\n    (error) => {\n        return Promise.reject(error);\n    }\n);\n\ninstance.interceptors.response.use(\n    (res) => {\n        return res;\n    },\n    async (err) => {\n        const originalConfig = err.config;\n\n        if (err.response) {\n            // access token expired\n            if (err.response.status === 401 && !originalConfig._retry) {\n                // handle infinite loop\n                originalConfig._retry = true;\n\n                try {\n                    const rs = await instance.post(\"/api/auth/token/refresh\", {\n                        refreshToken: TokenService.getLocalRefreshToken(),\n                    });\n\n                    console.log(\"response\", rs);\n\n                    const { accessToken } = rs.data;\n\n                    console.log(\"updateNewAccessToken\", accessToken);\n                    TokenService.updateNewAccessToken(accessToken);\n\n                    return instance(originalConfig);\n                } catch (_error) {\n                    return Promise.reject(_error);\n                }\n            }\n\n        }\n\n        return Promise.reject(err);\n    }\n);\n\nexport default instance;\n","import api from \"./api\";\nimport TokenService from \"./token.service\";\n\nconst signup = (username, firstname, lastname, email, password) => {\n    return api.post(\"/api/auth/signup\", {username, firstname, lastname, email, password}).then((response) => {\n            if (response.data.accessToken) {\n                TokenService.setUser(response.data);\n            }\n\n            return response.data;\n        });\n};\n\nconst login = (username, password) => {\n    return api.post(\"/api/auth/login\", {username, password}).then((response) => {\n            if (response.data.accessToken) {\n                TokenService.setUser(response.data);\n            }\n\n            return response.data;\n        });\n};\n\nconst logout = () => {\n    TokenService.removeUser();\n};\n\nconst getCurrentUser = () => {\n    return JSON.parse(localStorage.getItem(\"user\"));\n};\n\nconst authService = {\n    signup,\n    login,\n    logout,\n    getCurrentUser,\n};\n\nexport default authService;","import {useState} from \"react\";\n\nexport const UseNotification = () => {\n    const [show, setShow] = useState(false);\n    const [title, setTitle] = useState(\"\");\n    const [message, setMessage] = useState(\"\");\n    return {show, setShow, title, setTitle, message, setMessage};\n};","import React, {useState} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport AuthService from \"../../services/auth.service\";\nimport {Button, Col, Form} from \"react-bootstrap\";\nimport {UseNotification} from \"../../hooks/useNotification\";\nimport {useBetween} from \"use-between\";\n\nconst Login = () => {\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const {setShow, setMessage} = useBetween(UseNotification);\n    const [errors, setErrors] = useState({})\n\n    const [validated, setValidated] = useState(false);\n\n    const navigate = useNavigate();\n\n    const handleLogin = async (e) => {\n        e.preventDefault();\n        const newErrors = findFormErrors()\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            setValidated(false);\n        } else {\n            setValidated(true);\n            try {\n                await AuthService.login(username, password).then(() => {\n                        navigate(-1) || navigate('/home');\n                        window.location.reload();\n                    }, (error) => {\n\n                        let errorMessage = \"Username or password incorrect\";\n                        if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                            errorMessage = error?.response?.data[0]?.message;\n                        }\n\n                        setShow(true)\n                        setMessage(errorMessage);\n                    }\n                );\n            } catch (error) {\n\n                let errorMessage = \"Unexpected error. Please try again!\";\n                if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                    errorMessage = error?.response?.data[0]?.message;\n                }\n\n                setShow(true)\n                setMessage(errorMessage);\n            }\n        }\n    }\n\n    const findFormErrors = () => {\n        const newErrors = {}\n        if (!username || username === '') newErrors.username = 'Username cannot be blank!'\n        if (!password || password === '') newErrors.password = 'Password cannot be blank!'\n\n        return newErrors\n    }\n\n    return (\n        <article style={{ padding: \"50px\" }}>\n            <Form noValidate validated={validated} onSubmit={handleLogin}>\n                <h3>Login</h3>\n\n                <Form.Group as={Col} md=\"4\" className=\"mb-3\" controlId=\"username\">\n                    <Form.Label>Username</Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        placeholder=\"Enter username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                        isInvalid={!!errors.username}/>\n                    <Form.Control.Feedback type='invalid'>\n                        {errors.username}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group as={Col} md=\"4\" className=\"mb-3\" controlId=\"password\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control\n                        type=\"password\"\n                        placeholder=\"Password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                        isInvalid={!!errors.password}/>\n                    <Form.Control.Feedback type='invalid'>\n                        {errors.password}\n                    </Form.Control.Feedback>\n                </Form.Group>\n\n                <Button variant=\"primary\" type=\"submit\">Submit</Button>\n            </Form>\n        </article>\n    );\n};\n\nexport default Login;","import React, {useState} from \"react\";\nimport AuthService from \"../../services/auth.service\";\nimport {useNavigate} from \"react-router-dom\";\nimport {Button, Col, Form, InputGroup, Row} from \"react-bootstrap\";\nimport {useBetween} from \"use-between\";\nimport {UseNotification} from \"../../hooks/useNotification\";\n\nconst Signup = () => {\n\n    const [username, setUsername] = useState(\"\");\n    const [firstname, setFirstname] = useState(\"\");\n    const [lastname, setLastname] = useState(\"\");\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n\n    const [errors, setErrors] = useState({})\n    const [validated, setValidated] = useState(false);\n\n    const navigate = useNavigate();\n    const {setShow, setMessage} = useBetween(UseNotification);\n\n    const findFormErrors = () => {\n        const newErrors = {}\n        // username errors\n        if (!username || username === '') newErrors.username = 'Username cannot be blank!'\n        else if (username.length < 3) newErrors.username = 'Username is too short!'\n        else if (username.length > 20) newErrors.username = 'Username is too long!'\n\n        // firstname errors\n        if (!firstname || firstname === '') newErrors.firstname = 'First name cannot be blank!'\n        else if (firstname.length < 3) newErrors.firstname = 'First name is too short!'\n        else if (firstname.length > 20) newErrors.firstname = 'First name is too long!'\n\n        // lastname errors\n        if (!lastname || lastname === '') newErrors.lastname = 'Last name cannot be blank!'\n        else if (lastname.length < 3) newErrors.lastname = 'Last name is too short!'\n        else if (lastname.length > 20) newErrors.lastname = 'Last name is too long!'\n\n        // email errors\n        const regEx = /[a-zA-Z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,8}(.[a-z{2,8}])?/g;\n        if (!email || email === '') newErrors.email = 'Email cannot be blank!'\n        else if (!regEx.test(email)) newErrors.email = 'Email is not valid!'\n\n        // password errors\n        const strongRegex = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\n        if (!password || password === '') newErrors.password = 'Password cannot be blank!'\n        else if (!strongRegex.test(password)) newErrors.password = 'Password must contain at least 1 lowercase, 1 uppercase, 1 digit and 1 special character, alphabetical character!'\n\n        // confirm password errors\n        if (!confirmPassword || confirmPassword.localeCompare(password) !== 0) newErrors.confirmPassword = 'Passwords are different!'\n\n        return newErrors\n    }\n\n    const handleSignup = async (e) => {\n        e.preventDefault();\n\n        const newErrors = findFormErrors()\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            setValidated(false);\n        } else {\n            setValidated(true);\n            try {\n                await AuthService.signup(username, firstname, lastname, email, password).then((response) => {\n                        setShow(true)\n                        setMessage(\"Welcome onboard \" + firstname + \" \" + lastname);\n                        setTimeout(() => {\n                            navigate(\"/home\");\n                            window.location.reload();\n                        }, 1000);\n                    }, (error) => {\n\n                        let errorMessage = \"Unexpected error. Please try again!\";\n                        if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                            errorMessage = error?.response?.data[0]?.message;\n                        }\n\n                        setShow(true)\n                        setMessage(errorMessage);\n                    }\n                );\n            } catch (error) {\n                let errorMessage = \"Unexpected error. Please try again!\";\n                if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                    errorMessage = error?.response?.data[0]?.message;\n                }\n\n                setShow(true)\n                setMessage(errorMessage);\n            }\n        }\n    }\n\n    return (\n        <article style={{ padding: \"50px\" }}>\n            <Form noValidate validated={validated} onSubmit={handleSignup}>\n                <h3>Sign up</h3>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"username\">\n                        <Form.Label>Username</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Username\"\n                            value={username}\n                            onChange={(e) => setUsername(e.target.value)}\n                            isInvalid={!!errors.username}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.username}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"firstname\">\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"firstname\"\n                            value={firstname}\n                            onChange={(e) => setFirstname(e.target.value)}\n                            isInvalid={!!errors.firstname}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.firstname}\n                        </Form.Control.Feedback> </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"lastname\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"lastname\"\n                            value={lastname}\n                            onChange={(e) => setLastname(e.target.value)}\n                            isInvalid={!!errors.lastname}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.lastname}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"email\">\n                        <Form.Label>Email</Form.Label>\n                        <InputGroup hasValidation>\n                            <InputGroup.Text id=\"inputGroupPrepend\">@</InputGroup.Text>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"Email\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                                isInvalid={!!errors.email}/>\n                            <Form.Control.Feedback type='invalid'>\n                                {errors.email}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            placeholder=\"password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                            isInvalid={!!errors.password}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.password}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"5\" controlId=\"confirmPassword\">\n                        <Form.Label>Confirm password</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"password\"\n                            placeholder=\"Confirm password\"\n                            value={confirmPassword}\n                            onChange={(e) => setConfirmPassword(e.target.value)}\n                            isInvalid={!!errors.confirmPassword}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.confirmPassword}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Button type=\"submit\">Sign up</Button>\n            </Form>\n        </article>\n    );\n};\n\nexport default Signup;","import api from \"./api\";\n\nconst getBookCount = () => {\n    return api.get(\"/api/book/count\");\n};\n\nconst getAllBooks = (page = 0, sizePerPage = 0) => {\n    return api.get(\"/api/book/books?page=\" + page + \"&size=\" + sizePerPage);\n};\n\nconst createBook = (title, description, price) => {\n    return api.post(\"/api/book/create\", {title, description, price}).then((response) => {\n        return response.data;\n    });\n};\n\nconst readBook = (id) => {\n    return api.get(\"/api/book/\" + id);\n};\n\nconst updateBook = (id, title, description, price) => {\n    return api.put(\"/api/book/update\", {id, title, description, price}).then((response) => {\n        return response.data;\n    });\n};\n\nconst deleteBook = (id) => {\n    return api.delete(\"/api/book/delete/\" + id).then((response) => {\n        return response.data;\n    });\n};\n\nconst BookService = {\n    getBookCount,\n    getAllBooks,\n    createBook,\n    readBook,\n    updateBook,\n    deleteBook\n};\n\nexport default BookService;","import React, {useState} from \"react\";\nimport {Button, Card, Modal} from \"react-bootstrap\";\nimport {AiFillDelete, BsFillPenFill, FcViewDetails} from \"react-icons/all\";\nimport BookService from \"../../services/book.service\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useBetween} from \"use-between\";\nimport {UseNotification} from \"../../hooks/useNotification\";\n\nconst BookDetail = (props) => {\n\n    const navigate = useNavigate();\n\n    const {book, user, view = false} = props\n    const [currentBook] = useState(book);\n    const [currentUser] = useState(user);\n    const [currentView] = useState(view);\n    const [showBookDetailModal, setShowBookDetailModal] = useState(false);\n\n    const {setShow, setMessage} = useBetween(UseNotification);\n\n    const handleCloseBookDetailModal = () => setShowBookDetailModal(false);\n    const handleShowBookDetailModal = (book) => {\n        navigate(\"/book/view?id=\" + book.id);\n    }\n\n    const handleDelete = (currentBook) => {\n        BookService.deleteBook(currentBook?.id).then((response) => {\n            setShow(true)\n            setMessage(\"Deleted book \" + currentBook?.title);\n            setTimeout(() => {\n                navigate(\"/\")\n                window.location.reload();\n            }, 1000);\n\n        }, (error) => {\n            console.log(JSON.stringify(error))\n            let errorMessage = \"Unable to delete book \" + currentBook?.title + \". Please try again!\"\n            if(error?.response?.data[0]?.responseType === \"ERROR\") {\n                errorMessage = error?.response?.data[0]?.message;\n            }\n            setShow(true)\n            setMessage(errorMessage);\n        });\n    }\n\n    return (\n        <div>\n            <Card style={{width: 'auto', marginTop: '1.8rem'}}>\n                <Card.Body>\n                    <Card.Title><strong>Title:</strong> {currentBook.title}</Card.Title>\n                    <Card.Subtitle><strong>Author:</strong> {currentBook?.authorDto?.firstname} {currentBook?.authorDto?.lastname}\n                    </Card.Subtitle>\n                    <Card.Subtitle className=\"mb-2 text-muted\">\n                        <strong>Price:</strong><span>${currentBook.price}</span>\n                    </Card.Subtitle>\n                    <Card.Text>\n                        <strong>Description:</strong> {currentBook.description}\n                    </Card.Text>\n                </Card.Body>\n                <Card.Body>\n                    {currentUser && currentBook.authorDto.username === currentUser.username &&\n                    <div>\n                        {currentView &&\n                        <Card.Link\n                            onClick={() => handleShowBookDetailModal(currentBook)}><FcViewDetails/></Card.Link>}\n                        <Card.Link\n                            href={\"/book/edit?id=\" + currentBook?.id + \"&title=\" + currentBook?.title + \"&description=\" + currentBook?.description + \"&price=\" + currentBook?.price}><BsFillPenFill/></Card.Link>\n                        <Card.Link onClick={() => handleDelete(currentBook)}><AiFillDelete/></Card.Link>\n                    </div>\n                    }\n                    {((!currentUser || currentBook.authorDto.username !== currentUser.username && currentView) &&\n                        <Card.Link onClick={() => handleShowBookDetailModal(currentBook)}><FcViewDetails/></Card.Link>)}\n\n                </Card.Body>\n            </Card>\n\n            <Modal show={showBookDetailModal} onHide={handleCloseBookDetailModal} size=\"lg\"\n                   aria-labelledby=\"contained-modal-title-vcenter\"\n                   centered>\n                <Modal.Header closeButton>\n                    <Modal.Title>{currentBook?.title}</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Card>\n                        <Card.Body>\n                            <Card.Title>{currentBook?.authorDto?.firstname} {currentBook?.authorDto?.lastname}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">${currentBook?.price}</Card.Subtitle>\n                            <Card.Text>{currentBook?.description} </Card.Text>\n                        </Card.Body>\n                        <Card.Body>\n                            {currentUser && currentBook?.authorDto?.username === currentUser.username &&\n                            <div>\n                                <Card.Link\n                                    href={\"/book/edit?id=\" + currentBook?.id + \"&&title=\" + currentBook?.title + \"&description=\" + currentBook?.description}>\n                                    <BsFillPenFill/>\n                                </Card.Link>\n                                <Card.Link onClick={() => handleDelete(currentBook)}><AiFillDelete/></Card.Link>\n                            </div>\n                            }\n                        </Card.Body>\n                    </Card>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleCloseBookDetailModal}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n};\n\nexport default BookDetail;","import React, {useEffect, useState} from \"react\";\nimport BookService from \"../../services/book.service\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"react-bootstrap-table-next/dist/react-bootstrap-table2.min.css\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport filterFactory from 'react-bootstrap-table2-filter';\n\nimport {MdExpandMore, MdOutlineExpandLess} from \"react-icons/all\";\nimport AuthService from \"../../services/auth.service\";\nimport BookDetail from \"../Book/BookDetail\";\nimport {useBetween} from \"use-between\";\nimport {UseNotification} from \"../../hooks/useNotification\";\nimport ToolkitProvider, {Search} from 'react-bootstrap-table2-toolkit';\n\nconst {SearchBar} = Search;\n\nconst Home = () => {\n    const {setShow, setMessage} = useBetween(UseNotification);\n\n    const [books, setBooks] = useState([]);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            setCurrentUser(user);\n        }\n    }, []);\n\n    useEffect(() => {\n        try {\n            BookService.getAllBooks().then((response) => {\n                    setBooks(response.data);\n                }, (error) => {\n\n                    let errorMessage = \"Unexpected error. Pleaser try again!\";\n                    if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                        errorMessage = error?.response?.data[0]?.message;\n                    }\n\n                    setShow(true)\n                    setMessage(errorMessage);\n                    setBooks([]);\n                }\n            );\n        } catch (error) {\n\n            let errorMessage = \"Unexpected error. Pleaser try again!\";\n            if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                errorMessage = error?.response?.data[0]?.message;\n            }\n\n            setShow(true)\n            setMessage(errorMessage);\n            setBooks([]);\n        }\n\n    }, []);\n\n    const columns = [{\n        dataField: 'title',\n        text: 'Title',\n        sort: true\n    }, {\n        dataField: 'price',\n        text: 'Price',\n        formatter: priceFormatter,\n        sort: true\n    }, {\n        dataField: 'authorDto',\n        text: 'Author',\n        formatter: authorFormatter,\n        sort: true\n    }];\n\n    const expandRow = {\n        renderer: row => (\n            <BookDetail book={row} user={currentUser} view={true}/>\n        ),\n        showExpandColumn: true,\n        expandHeaderColumnRenderer: ({isAnyExpands}) => {\n            if (isAnyExpands) {\n                return <b><MdOutlineExpandLess/></b>;\n            }\n            return <b><MdExpandMore/></b>;\n        },\n        expandColumnRenderer: ({expanded}) => {\n            if (expanded) {\n                return (\n                    <b>-</b>\n                );\n            }\n            return (\n                <b>...</b>\n            );\n        }\n    };\n\n    function priceFormatter(cell, row) {\n        return (\n            <span>$ {cell} </span>\n        );\n    }\n\n    function authorFormatter(cell, row) {\n        return (<span>{row.authorDto.firstname} {row.authorDto.lastname} </span>);\n    }\n\n    return (\n\n        <article style={{ padding: \"50px\" }}>\n\n            <ToolkitProvider\n                bootstrap4\n                keyField=\"id\"\n                data={books}\n                columns={columns}\n                filter={filterFactory()}\n                search>\n                {\n                    props => (\n                        <div>\n                            <h3>List of books</h3>\n                            <SearchBar {...props.searchProps}  style={{width: '75rem', margin:'auto'}} srText={\"Search book by title\"}/>\n                            <hr/>\n                            <BootstrapTable\n                                {...props.baseProps}\n                                noDataIndication=\"No Book found\"\n                                expandRow={expandRow}\n                                pagination={paginationFactory({sizePerPage: 5})}/>\n                        </div>\n                    )\n                }\n            </ToolkitProvider>\n        </article>\n    );\n};\n\nexport default Home;","import React, {useEffect, useState} from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport AuthService from \"../../services/auth.service\";\nimport BookService from \"../../services/book.service\";\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport {Button, Col, Form, InputGroup, Row} from \"react-bootstrap\";\nimport {useBetween} from \"use-between\";\nimport {UseNotification} from \"../../hooks/useNotification\";\n\nconst PARAMS = {\n    'id': 'id',\n    'title': 'title',\n    'description': 'description',\n    'price': 'price'\n}\n\nconst EditBook = () => {\n\n    const [searchParams] = useSearchParams();\n    const navigate = useNavigate();\n\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const [id, setId] = useState(\"\");\n    const [title, setTitle] = useState(\"\");\n    const [description, setDescription] = useState(\"\");\n    const [price, setPrice] = useState(0);\n\n    const [errors, setErrors] = useState({})\n    const [validated, setValidated] = useState(false);\n\n    const {setShow, setMessage} = useBetween(UseNotification);\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            console.log(user)\n            setCurrentUser(user);\n        }\n    }, []);\n\n    useEffect(() => {\n        const currentParams = Object.fromEntries([...searchParams]);\n\n        if (currentParams[PARAMS.id]) {\n            setId(currentParams[PARAMS.id]);\n        } else {\n            setId(\"\");\n        }\n\n        if (currentParams[PARAMS.title]) {\n            setTitle(currentParams[PARAMS.title]);\n        } else {\n            setTitle(\"\");\n        }\n\n        if (currentParams[PARAMS.description]) {\n            setDescription(currentParams[PARAMS.description]);\n        } else {\n            setDescription(\"\");\n        }\n\n        if (currentParams[PARAMS.price]) {\n            setPrice(currentParams[PARAMS.price]);\n        } else {\n            setPrice(\"\");\n        }\n    }, [searchParams]);\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n        const newErrors = findFormErrors()\n        if (Object.keys(newErrors).length > 0) {\n            setErrors(newErrors);\n            setValidated(false);\n        } else {\n            setValidated(true);\n\n            try {\n                if (id) {\n                    await BookService.updateBook(id, title, description, price).then((response) => {\n                            setShow(true)\n                            setMessage(\"Updated book: \" + title);\n                            setTimeout(() => {\n                                navigate(\"/\")\n                                window.location.reload();\n                            }, 1000);\n                        }, (error) => {\n                        console.log(JSON.stringify(error))\n\n                        if (error.message === 'Network Error') {\n                                let errorMessage = \"Session expired. You will be redirected to login page!\";\n                                if (error?.response?.data?.responseType === \"ERROR\") {\n                                    errorMessage = error?.response?.data?.message;\n                                }\n                                setShow(true)\n                                setMessage(errorMessage);\n                                setTimeout(() => {\n                                    AuthService.logout();\n                                    navigate(\"/login\");\n                                }, 3000);\n                            } else {\n                                console.log(JSON.stringify(error))\n                                let errorMessage = \"Unexpected error. Please try again!\";\n                                if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                                    errorMessage = error?.response?.data[0]?.message;\n                                }\n                                setShow(true);\n                                setMessage(errorMessage);\n                            }\n                        }\n                    );\n                } else {\n                    await BookService.createBook(title, description, price).then((response) => {\n                            setShow(true);\n                            setMessage(\"Created book: \" + title);\n                            setTimeout(() => {\n                                navigate(\"/home\");\n                                window.location.reload();\n                            }, 3000);\n\n                        }, (error) => {\n                            if (error.message === 'Network Error') {\n\n                                let errorMessage = \"Session expired. You will be redirected to login page!\";\n                                if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                                    errorMessage = error?.response?.data[0]?.message;\n                                }\n\n                                setShow(true)\n                                setMessage(errorMessage);\n                                setTimeout(() => {\n                                    AuthService.logout();\n                                    navigate(\"/login\");\n                                }, 3000);\n                            } else {\n\n                                let errorMessage = \"Unexpected error. Please try again!\";\n                                if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                                    errorMessage = error?.response?.data[0]?.message;\n                                }\n\n                                setShow(true);\n                                setMessage(errorMessage);\n                            }\n                        }\n                    );\n                }\n            } catch (error) {\n\n                if (error.message === 'Network Error') {\n\n                    let errorMessage = \"Session expired. You will be redirected to login page!\";\n                    if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                        errorMessage = error?.response?.data[0]?.message;\n                    }\n\n                    setShow(true)\n                    setMessage(errorMessage);\n                    setTimeout(() => {\n                        navigate(\"/login\");\n                    }, 3000);\n                } else {\n\n                    let errorMessage = \"Unexpected error. Please try again!\";\n                    if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                        errorMessage = error?.response?.data[0]?.message;\n                    }\n\n                    setShow(true)\n                    setMessage(errorMessage);\n                }\n            }\n        }\n    };\n\n    const findFormErrors = () => {\n        const newErrors = {}\n        // title errors\n        if (!title || title === '') newErrors.title = 'Title cannot be blank!'\n        else if (title.length < 3) newErrors.title = 'Title is too short!'\n        else if (title.length > 255) newErrors.title = 'Title is too long!'\n\n        // description errors\n        if (!description || description === '') newErrors.description = 'Description cannot be blank!'\n        else if (description.length < 20) newErrors.description = 'Description is too short!'\n        else if (description.length > 65535) newErrors.description = 'Description is too long!'\n\n        // price errors\n        if (!price) newErrors.price = 'Price cannot be blank!'\n\n        return newErrors\n    }\n\n    return (\n        <article style={{ padding: \"50px\" }}>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                <h3>{!id ? \"Add new book\" : \"Update book\"}</h3>\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"6\" controlId=\"title\">\n                        <Form.Label>Title</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"text\"\n                            placeholder=\"Title\"\n                            value={title}\n                            onChange={(e) => setTitle(e.target.value)}\n                            isInvalid={!!errors.title}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.title}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"6\" controlId=\"Description\">\n                        <Form.Label>Description</Form.Label>\n                        <Form.Control\n                            required\n                            type=\"textarea\"\n                            as=\"textarea\" rows={3}\n                            placeholder=\"Short description\"\n                            value={description}\n                            onChange={(e) => setDescription(e.target.value)}\n                            isInvalid={!!errors.description}/>\n                        <Form.Control.Feedback type='invalid'>\n                            {errors.description}\n                        </Form.Control.Feedback>\n                    </Form.Group>\n                </Row>\n\n                <Row className=\"mb-3\">\n                    <Form.Group as={Col} md=\"6\" controlId=\"price\">\n                        <Form.Label>Price</Form.Label>\n                        <InputGroup hasValidation>\n                            <InputGroup.Text id=\"inputGroupPrepend\">$</InputGroup.Text>\n                            <Form.Control\n                                type=\"number\"\n                                placeholder=\"Price\"\n                                aria-describedby=\"inputGroupPrepend\"\n                                required\n                                value={price}\n                                onChange={(e) => setPrice(e.target.value)}\n                                isInvalid={!!errors.price}/>\n                            <Form.Control.Feedback type='invalid'>\n                                {errors.price}\n                            </Form.Control.Feedback>\n                        </InputGroup>\n                    </Form.Group>\n                </Row>\n\n                <Button type=\"submit\">Submit book</Button>\n            </Form>\n        </article>\n    );\n}\n\nexport default EditBook;\n","import React, {useEffect, useState} from \"react\";\nimport BookService from \"../../services/book.service\";\nimport {useNavigate, useSearchParams} from \"react-router-dom\";\nimport AuthService from \"../../services/auth.service\";\nimport BookDetail from \"./BookDetail\";\nimport {useBetween} from \"use-between\";\nimport {UseNotification} from \"../../hooks/useNotification\";\n\n\nconst PARAMS = {\n    'id': 'id'\n}\n\nconst ViewBook = () => {\n\n    const [searchParams] = useSearchParams();\n    const navigate = useNavigate();\n    const {setShow, setMessage} = useBetween(UseNotification);\n\n    const [currentBook, setCurrentBook] = useState(undefined);\n    const [currentUser, setCurrentUser] = useState(undefined);\n\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n        if (user) {\n            setCurrentUser(user);\n        }\n    }, []);\n\n    useEffect(() => {\n        const currentParams = Object.fromEntries([...searchParams]);\n\n        if (currentParams[PARAMS.id]) {\n            BookService.readBook(currentParams[PARAMS.id]).then((response) => {\n                setCurrentBook(response.data);\n            }).catch(error => {\n\n                if (error.message === 'Network Error') {\n\n                    let errorMessage = \"Session expired. You will be redirected to login page!\";\n                    if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                        errorMessage = error?.response?.data[0]?.message;\n                    }\n\n                    setShow(true)\n                    setMessage(errorMessage);\n                    setTimeout(() => {\n                        AuthService.logout();\n                        navigate(\"/login\");\n                    }, 1000);\n                } else {\n\n                    let errorMessage = \"Unexpected error. Please try again!\";\n                    if (error?.response?.data[0]?.responseType === \"ERROR\") {\n                        errorMessage = error?.response?.data[0]?.message;\n                    }\n\n                    setShow(true)\n                    setMessage(errorMessage);\n                }\n\n            })\n        } else {\n            navigate(\"/home\");\n        }\n    }, [searchParams]);\n\n    return (\n        <article style={{ padding: \"50px\" }}>\n            <h3>Book Details</h3>\n            {currentBook && currentUser ? <BookDetail book={currentBook} user={currentUser}/> : <div></div>}\n        </article>\n    );\n};\n\nexport default ViewBook;\n","import { Link } from \"react-router-dom\"\n\nconst NotFound = () => {\n    return (\n        <article style={{ padding: \"100px\" }}>\n            <h1>Oops!</h1>\n            <p>Page Not Found</p>\n            <div className=\"flexGrow\">\n                <Link to=\"/\">Visit Our Homepage</Link>\n            </div>\n        </article>\n    )\n}\n\nexport default NotFound","import React, {useEffect, useState} from \"react\";\nimport {Link, Navigate, Route, Routes, useNavigate} from \"react-router-dom\";\nimport { useBetween } from \"use-between\";\nimport AuthService from \"./services/auth.service\";\nimport Login from \"./components/Login/Login\";\nimport Signup from \"./components/Signup/Signup\";\nimport Home from \"./components/Home/Home\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport EditBook from \"./components/Book/EditBook\";\nimport ViewBook from \"./components/Book/ViewBook\";\nimport Toast from \"react-bootstrap/Toast\";\nimport ToastContainer from 'react-bootstrap/ToastContainer';\n\nimport {UseNotification} from \"./hooks/useNotification\";\nimport NotFound from \"./components/Missing/NotFound\";\n\n\nfunction App() {\n\n    const [currentUser, setCurrentUser] = useState(undefined);\n    const { show, setShow, message } = useBetween(UseNotification);\n\n\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        const user = AuthService.getCurrentUser();\n\n        if (user) {\n            setCurrentUser(user);\n        }\n    }, []);\n\n    const logOut = () => {\n        AuthService.logout();\n        navigate('/home');\n    };\n\n    return (\n        <div>\n            <nav className=\"navbar navbar-expand navbar-green bg-light\">\n                <div className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to={\"/home\"} className=\"nav-link\">BookStore</Link>\n                    </li>\n\n                    {currentUser && (\n                        <li className=\"nav-item\">\n                            <Link to={\"/book/edit\"} className=\"nav-link\">Add book</Link>\n                        </li>\n                    )}\n                </div>\n\n                {currentUser ? (\n                    <div className=\"navbar-nav ms-auto\">\n                        <li className=\"nav-item\">\n                            <span className=\"nav-link\">Hi {currentUser.username}!</span>\n                        </li>\n                        <li className=\"nav-item\">\n                            <a href={\"/logout\"} className=\"nav-link\" onClick={logOut}>\n                                Logout\n                            </a>\n                        </li>\n                    </div>\n                ) : (\n                    <div className=\"navbar-nav ms-auto\">\n                        <li className=\"nav-item\">\n                            <Link to={\"/login\"} className=\"nav-link\">\n                                Login\n                            </Link>\n                        </li>\n\n                        <li className=\"nav-item\">\n                            <Link to={\"/signup\"} className=\"nav-link\">\n                                Sign up\n                            </Link>\n                        </li>\n                    </div>\n                )}\n            </nav>\n\n            <div className=\"container mt-3\" >\n                <Routes>\n                    <Route path=\"/\" element={<Home/>}/>\n                    <Route path=\"/home\" element={<Home/>}/>\n                    <Route path=\"/login\" element={<Login/>}/>\n                    <Route path=\"/logout\" element={<Navigate to=\"/home\"/>}/>\n                    <Route path=\"/signup\" element={<Signup/>}/>\n                    <Route path=\"/book/edit\" element={<EditBook/>}/>\n                    <Route path=\"/book/view\" element={<ViewBook/>}/>\n                    <Route path=\"*\" element={<NotFound />} />\n                </Routes>\n            </div>\n\n            <ToastContainer position=\"top-end\" className=\"p-3\">\n                    <Toast onClose={() => setShow(false)} show={show} delay={3000} autohide className=\"p-3\" position={'top-start'}>\n                        <Toast.Body>{message}</Toast.Body>\n                    </Toast>\n            </ToastContainer>\n        </div>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}